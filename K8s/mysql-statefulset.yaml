apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  serviceName: mysql
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      securityContext:
        fsGroup: 999
      containers:
      - name: mysql
        image: mysql:5.7
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: MYSQL_USER
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: MYSQL_PASSWORD
        - name: MYSQL_DATABASE
          value: mydb
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
          - name: init-script
            mountPath: /docker-entrypoint-initdb.d
          # Inside the mysql container's volumeMounts:
          - name: mysql-persistent-storage # Matches the PVC template name
            mountPath: /var/lib/mysql      # The default data directory for MySQL image
  volumeClaimTemplates:
    - metadata:
        name: mysql-persistent-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 512Mi
        storageClassName: ebc-sc

---
apiVersion: v1
kind: Service
metadata:
  name: mysql     # This name MUST match MYSQL_HOST in flask app
spec:
  clusterIP: None
  selector:
    app: mysql    # Must match MySQL pod label
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  # Headless service for StatefulSet
